[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\alina\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\alina\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.7 (Oracle Corporation Java 18.0.1.1)
[debug]       Load.loadUnit: plugins took 252.2574ms
[debug]       Load.loadUnit: defsScala took 0.8375ms
[debug] [Loading] Scanning directory C:\Users\alina\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\alina\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 49.9389 ms
[debug]           Load.resolveProject(global-plugins) took 124.3657ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\alina\.sbt\1.0\plugins, plugins: List(<none>))) took 232.5306ms
[debug] [Loading] Done in C:\Users\alina\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 292.1686ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.802ms
[debug]     Load.loadUnit(file:/C:/Users/alina/.sbt/1.0/plugins/, ...) took 572.0785ms
[debug]   Load.apply: load took 1035.3542ms
[debug]   Load.apply: resolveProjects took 18.1898ms
[debug]   Load.apply: finalTransforms took 183.7957ms
[debug]   Load.apply: config.delegates took 24.0384ms
[debug]   Load.apply: Def.make(settings)... took 1373.0689ms
[debug]   Load.apply: structureIndex took 382.5898ms
[debug]   Load.apply: mkStreams took 3.6756ms
[info] loading global plugins from C:\Users\alina\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7411.3589ms
[debug]           Load.loadUnit: plugins took 76.3002ms
[debug]           Load.loadUnit: defsScala took 0.0081ms
[debug] [Loading] Scanning directory D:\Университет\Greeting\project
[debug]             Load.loadUnit: mkEval took 116.6616ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Университет\Greeting\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 8.1084 ms
[info] loading settings for project greeting-build from idea.sbt ...
[debug]               Load.resolveProject(greeting-build) took 11.1897ms
[debug]             Load.loadTransitive: finalizeProject(Project(id greeting-build, base: D:\Университет\Greeting\project, plugins: List(<none>))) took 21.6935ms
[debug] [Loading] Done in D:\Университет\Greeting\project, returning: (greeting-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 15648.9805ms
[debug]           Load.loadUnit: cleanEvalClasses took 22.0352ms
[debug]         Load.loadUnit(file:/D:/Университет/Greeting/project/, ...) took 15749.8291ms
[debug]       Load.apply: load took 15756.3505ms
[debug]       Load.apply: resolveProjects took 0.515ms
[debug]       Load.apply: finalTransforms took 273.3589ms
[debug]       Load.apply: config.delegates took 8.0614ms
[debug]       Load.apply: Def.make(settings)... took 583.4764ms
[debug]       Load.apply: structureIndex took 106.6354ms
[debug]       Load.apply: mkStreams took 0.0049ms
[info] loading project definition from D:\Университет\Greeting\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 27492.269ms
[debug]     Load.loadUnit: defsScala took 0.0122ms
[debug] [Loading] Scanning directory D:\Университет\Greeting
[debug]       Load.loadUnit: mkEval took 0.9162ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 5.2452 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 82.2329ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: D:\Университет\Greeting, plugins: List(<none>))) took 92.3577ms
[debug] [Loading] Done in D:\Университет\Greeting, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 4293.7631ms
[debug]     Load.loadUnit: cleanEvalClasses took 242.1072ms
[debug]   Load.loadUnit(file:/D:/Университет/Greeting/, ...) took 32030.3068ms
[debug] Load.apply: load took 32056.572ms
[debug] Load.apply: resolveProjects took 0.3719ms
[debug] Load.apply: finalTransforms took 136.4816ms
[debug] Load.apply: config.delegates took 0.8373ms
[debug] Load.apply: Def.make(settings)... took 298.261ms
[debug] Load.apply: structureIndex took 77.1929ms
[debug] Load.apply: mkStreams took 0.0048ms
[info] set current project to Greeting (in build file:/D:/Университет/Greeting/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 59763 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 59763, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Greeting (in build file:/D:/Университет/Greeting/)
[debug] > Exec(idea-shell, None, None)
